name: Inkage
description: Uber for skin-based ink application
- services:
  auth:
    description: auth the users and robots
    name: AuthService
      - source:
        - guards:
          - JWT # implementation
        - services:
          - JWT # implementation
  users:
    name: UsersService
    description: do stuff to the users
    - entities:
      User:
        ...UserSchema
    - controllers:
      UsersController:
        crud: @users.services.crud
        - actions:  # AKA endpoint
          findSuperUsers:
            input: None
            output:
              type: @users.entities.User[] # is a reference
            implementation: @users.src.services.find # is a refernece
            filter:
              - key: is_super
                operator: ==
                value: true
    - source:
      # - dtos:   # lb alternative to `crud``
      #   create:
      #     ...dtoSchema
      #   update:
      #     ...dtoSchema
      - services:
        UserCURD:
          type: 'crud'
          model: @users.entites
          create_schema: @useres.dto.create
        constructor:
          
        Find: # implementation
         type
        # constructor:
        #   inputs:
        #     UserRepo: @... # is a reference
          - methods:
            findOne:
              inputs:
                id: number
              # - assignments: # example of an implementation
              #   user:
              #     call: UserRepo.findOne
              #     inputs:
              #       id: this.inputs.id
              output:
                type: @users.entities.User # is a reference











# app.module
# services/
#   auth/
#     src/
#       guards/
#         JWT.ts
#       services/
#         JWT.ts
#   users/
